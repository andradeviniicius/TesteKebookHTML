@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

body {
  width: 100vw;
  height: 100vh;
}

* {
  font-family: "Poppins", sans-serif;
}

.mainContent {
  display: flex;
  height: 100%;
}

.mainContent__left {
  width: 100%;
  background-image: url("/assets//back-sec-5-home.png");
}

.mainContent__logo {
  margin: 2%;
}

.mainContent__right {
  width: 100%;
  background-color: #f7fff7;
  display: flex;
  justify-content: center;
  align-items: center;
}

.signInForm__container {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
  height: 35%;
}

.signInForm__form {
  font-family: 'Poppins', sans-serif; 
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 12px;
  width: 100%;
}

.signInForm__title {
}

.baseInput__screenReader{
  width: var(--baseInput__screenReader-width, 1px);
  height: var(--baseInput__screenReader-height, 1px);
  padding: var(--baseInput__screenReader-padding, 0);
  border: var(--baseInput__screenReader-border, none);

  position: var(--baseInput__screenReader-position, absolute);
  clip: var(--baseInput__screenReader-clip, rect(1px, 1px, 1px, 1px));
  overflow: var(--baseInput__screenReader-overflow, hidden);
}
.baseInput__input{ 
  --uiFieldPlaceholderColor: var(--fieldPlaceholderColor, #767676);
  
  background-color: transparent;
  border-radius: 0;
  border: none;

  -webkit-appearance: none;
  -moz-appearance: none;

  font-family: inherit;
  font-size: inherit;
}

.baseInput__input:focus::-webkit-input-placeholder{
  color: var(--uiFieldPlaceholderColor);
}

.baseInput__input:focus::-moz-placeholder{
  color: var(--uiFieldPlaceholderColor);
}

.baseInput{
  --uiFieldBorderWidth: var(--fieldBorderWidth, 2px);
  --uiFieldPaddingRight: var(--fieldPaddingRight, 1rem);
  --uiFieldPaddingLeft: var(--fieldPaddingLeft, 1rem);   
  --uiFieldBorderColorActive: var(--fieldBorderColorActive, rgba(22, 22, 22, 1));

  display: var(--fieldDisplay, inline-flex);
  position: relative;
  font-size: var(--fieldFontSize, 1rem);
}

.baseInput__input{
  box-sizing: border-box;
  width: var(--fieldWidth, 100%);
  height: var(--fieldHeight, 3rem);
  padding: var(--fieldPaddingTop, 1.25rem) var(--uiFieldPaddingRight) var(--fieldPaddingBottom, .5rem) var(--uiFieldPaddingLeft);
  border-bottom: var(--uiFieldBorderWidth) solid var(--fieldBorderColor, rgba(0, 0, 0, .25));  
}

.baseInput__input:focus{
  outline: none;
}

.baseInput__input::-webkit-input-placeholder{
  opacity: 0;
  transition: opacity .2s ease-out;
}

.baseInput__input::-moz-placeholder{
  opacity: 0;
  transition: opacity .2s ease-out;
}

.baseInput__input:focus::-webkit-input-placeholder{
  opacity: 1;
  transition-delay: .2s;
}

.baseInput__input:focus::-moz-placeholder{
  opacity: 1;
  transition-delay: .2s;
}

.baseInput__labelWrap{
  box-sizing: border-box;
  pointer-events: none;
  cursor: text;

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.baseInput__labelWrap::after{
  content: "";
  box-sizing: border-box;
  width: 100%;
  height: 0;
  opacity: 0;

  position: absolute;
  bottom: 0;
  left: 0;
}

.baseInput__input:focus ~ .baseInput__labelWrap::after{
  opacity: 1;
}

.baseInput__label{
  position: absolute;
  left: var(--uiFieldPaddingLeft);
  top: calc(50% - .5em);

  line-height: 1;
  font-size: var(--fieldHintFontSize, inherit);

  transition: top .2s cubic-bezier(0.9, -0.15, 0.1, 1.15), opacity .2s ease-out, font-size .2s ease-out;
}

.baseInput__input:focus ~ .baseInput__labelWrap .baseInput__label,
.baseInput__input:not(:placeholder-shown) ~ .baseInput__labelWrap .baseInput__label{
  --fieldHintFontSize: var(--fieldHintFontSizeFocused, .75rem);

  top: var(--fieldHintTopHover, .25rem);
}
.baseInput__labelWrap::after{
  border-bottom: var(--uiFieldBorderWidth) solid var(--uiFieldBorderColorActive);
  transition: opacity .2s ease-out;
}

.signInForm__submit {
}

.signInForm__separator {
  display: flex;
  width: 100%;
  gap: 15px;

  hr {
    width: 100px;
  }
}
